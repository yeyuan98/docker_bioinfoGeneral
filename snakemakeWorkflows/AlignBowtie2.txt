---------------
Bowtie2 alignment with trimming

Ye Yuan
Apr 17, 2025

Workflow: trim_galore -> bowtie2 | samtools, with fastqc pre- and post-trimming

---------------
Config: *AlignBowtie2.yaml* in current working dir. To generate a template, run the smkConfig.sh helper.

Input: *rawdata* folder containing gzipped FASTQ files as input. Single-end must be {sample}.fastq.gz while paired-end must be {sample}_1.fastq.gz and {sample}_2.fastq.gz.

Input: bowtie2 index base path defined in the config file. This is passed to bowtie2 argument `-x`.

Output: *trimmed* folder containing gzipped trimmed FASTQ files. Trimming is performed with trim_galore with parameters specified in config. Trimming reports generated by trim_galore is also stored here (one file per sample).

Output: *alignment* folder containing bowtie2 alignment files. bowtie2 raw output SAM file is converted into BAM, sorted, and indexed by samtools. Only the final sorted and indexed BAM file is stored. The original bowtie2 output SAM file is deleted after conversion to BAM.

Output: *fastqc* folder containing fastQC reports. Two folders per sample: one for pre-trimming FASTQ and one for post-trimming FASTQ. To run fastqc, you need to force run rules by `-R fastqc`.

Logging: stderr messages for all workflow steps are stored here, following general naming convention "<STEP>_<SAMPLE>.log".